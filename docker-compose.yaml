version: '3.9'
services:
  app:
    container_name: golang_container
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
    tty: true
    build: .
    ports:
      - '${APP_PORT}:3000'
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - postgresdb
    networks:
      - learning

  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/access.log:/var/log/nginx/access.log
      - ./nginx/error.log:/var/log/nginx/error.log
      - /etc/letsencrypt/live/droppy.gael-stervinou.fr/fullchain.pem:/etc/pki/tls/certs/fullchain.pem
      - /etc/letsencrypt/live/droppy.gael-stervinou.fr/privkey.pem:/etc/pki/tls/certs/privkey.pem
    depends_on:
      - app
    networks:
      - learning

  postgresdb:
    image: postgres:latest
    container_name: postgres_container
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    ports:
      - '5432:5432'
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    networks:
      - learning
networks:
  learning:
    driver: bridge